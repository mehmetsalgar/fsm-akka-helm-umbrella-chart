buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
        maven { url "https://plugins.gradle.org/m2/"}
    }

    dependencies {
        classpath "org.unbroken-dome.gradle-plugins.helm:helm-plugin:1.7.0"
        //classpath "org.unbroken-dome.gradle-plugins.helm:helm-publish-plugin:1.7.0"
    }
}

apply plugin: 'org.unbroken-dome.helm'
//apply plugin: 'org.unbroken-dome.helm-publish'

group = 'org.salgar.akka.fsm'

ext {
    flag = true
}

if(ext.flag) {
    ext.props = [
            HELM_URL: property('HELM_URL'),
            HELM_PATH: property('HELM_PATH'),
            HELM_USER: property('HELM_USER'),
            HELM_PASSWORD: property('HELM_PASSWORD'),
            ADDRESS_CHECK_VERSION: property('address-check-version'),
            CREDIT_SCORE_VERSION: property('credit-score-version'),
            FRAUD_PREVENTION_VERSION: property('fraud-prevention-version'),
            CUSTOMER_RELATIONSHIP_ADAPTER_VERSION: property('customer-relationship-adapter-version'),
            FSM_AKKA_4EYES_VERSION: property('fsm-akka-4eyes-version')
    ]
}

helm {
    charts {
        uc {
            //publish = true
            chartName = 'fsm-akka'
            chartVersion = "${project.version}"
            sourceDir = file('helm')
            filtering {
                values.put 'appVersion', "${project.version}-${gitBranch()}"
                //values.put 'addressCheckVersion', "${props.ADDRESS_CHECK_VERSION}"
                //values.put 'creditScoreVersion', "${props.CREDIT_SCORE_VERSION}"
                //values.put 'fraudPreventionVersion', "${props.FRAUD_PREVENTION_VERSION}"
                values.put 'customerRelationshipAdapterVersion', "${props.CUSTOMER_RELATIONSHIP_ADAPTER_VERSION}"
                //values.put 'fsmAkka4eyesVersion', "${props.FSM_AKKA_4EYES_VERSION}"
            }
        }
    }
    repositories {
        uc_rep {
            url "${props.HELM_URL}/${props.HELM_PATH}"
            credentials {
                username = "${props.HELM_USER}"
                password = "${props.HELM_PASSWORD}"
            }
        }
    }
    /*publishing {
        repositories {
            nexus {
                url = uri('http://fsmakka.salgar.org/')
                repository = 'fsm-akka-helm'
                apiVersion = 'v1'
                credentials {
                    username = "${props.HELM_USER}"
                    password = "${props.HELM_PASSWORD}"
                }
            }
        }
    }*/
}

def gitBranch() {
    def branch = ""
    def proc = "git rev-parse --abbrev-ref HEAD".execute()
    proc.in.eachLine { line -> branch = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    branch
}
